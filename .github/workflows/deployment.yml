name: Deploy Next.js to S3 and invalidate CloudFront # 작업이 실행될 때 GitHub Actions UI에 표시

on:
  push:
    branches:
      - main  # main 브랜치에 푸시가 발생할 때 워크플로우가 실행
  workflow_dispatch: # 사용자가 GitHub 웹 UI에서 수동으로 워크플로우 실행 가능

jobs:
  deploy:
    runs-on: ubuntu-latest # 작업을 실행할 환경으로 최신 버전의 Ubuntu 가상 머신을 사용
    
    steps:
    - name: Checkout repository # 저장소를 체크아웃합니다.
      uses: actions/checkout@v2

    - name: Install dependencies # Next.js 프로젝트에 필요한 의존성을 설치
      run: npm ci # npm install 대신 사용하며, package-lock.json 파일을 기반으로 의존성을 빠르게 설치

    - name: Build # Next.js 프로젝트를 빌드
      run: npm run build #  이 과정에서 최적화된 정적 파일이 생성

    - name: Configure AWS credentials # AWS CLI를 사용할 수 있도록 자격 증명을 설정
      uses: aws-actions/configure-aws-credentials@v1 # AWS의 GitHub Actions 플러그인을 사용
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}

    - name: Deploy to S3 # Next.js의 빌드 결과물을 S3에 업로드
      run: | # Next.js 빌드 결과물이 위치한 디렉터리/업로드 대상 S3 버킷/S3에 남아 있는 불필요한 파일을 삭제
        aws s3 sync out/ s3://${{ secrets.S3_BUCKET_NAME }} --delete

    - name: Invalidate CloudFront cache # 포된 S3 파일과 관련된 CloudFront 캐시를 무효화하여 새로운 파일 즉시 반영
      run: | # 모든 파일의 캐시를 무효화
        aws cloudfront create-invalidation --distribution-id ${{ secrets.CLOUDFRONT_DISTRIBUTION_ID }} --paths "/*"